dimS = 2;
omegaS = 20;
dimB = 2;
delta = 5;
omegaB = omegaS-delta;
Omega = omegaS + omegaB;
TB = 10;
gxx = 1;
gyy = 4.5;
gzz = 5;
sx = [0 0.5; 0.5 0];
sy = [0 1i/2; -1i/2 0];
sz = [-0.5 0; 0 0.5];
sp = [0 0; 1 0];
sm = [0 1; 0 0];

HS = kron(sz*omegaS,eye(2));
HB = kron(eye(2),sz*omegaB);
H0 = HS + HB;
Hint = 0.5*(gxx*kron(sx,sx) + gyy*kron(sy,sy) + gzz*kron(sz,sz));
H = HS + HB + Hint;

Gm = (gxx - gyy)/4;
Gl = (gxx + gyy)/4;
mSq = sqrt(Omega^2+Gm^2);
mP = gzz/4+mSq;
mM = gzz/4-mSq;
mTmp = Omega + mSq;
mNorm = (Gm)^2 + mTmp^2;
lSq = sqrt(delta^2+Gl^2);
lP = -gzz/4+lSq;
lM = -gzz/4-lSq;
lTmp = delta + lSq;
lNorm = (Gl)^2 + lTmp^2;
C = exp(-1i*delta*dtInt/2)*(exp(-1i*lSq*dtInt/2)*Gl^2 + exp(1i*lSq*dtInt/2)*lTmp^2)/lNorm;
D = exp(-1i*Omega*dtInt/2)*(exp(-1i*mSq*dtInt/2)*Gm^2 + exp(1i*mSq*dtInt/2)*mTmp^2)/mNorm;
m = 2*Gm*mTmp*sin(mSq*dtInt/2)*exp(-1i*Omega*dtInt/2)/mNorm;
k = 2*Gl*lTmp*sin(lSq*dtInt/2)*exp(-1i*delta*dtInt/2)/lNorm;
theta = angle(k*m);
R = abs(k*m);
sx = [0 0.5; 0.5 0];
sy = [0 1i/2; -1i/2 0];
sz = [-0.5 0; 0 0.5];
sp = [0 0; 1 0];
sm = [0 1; 0 0];
s0 = [1 0; 0 0];
s1 = [0 0; 0 1]; 
rhoTh = exp(-(1:dimS)*omegaB/TB);
rhoTh = diag(rhoTh)/sum(rhoTh);
p0 = rhoTh(1);
p1 = rhoTh(4);
exM = exp(-1i*gzz*dtInt/2);
exP = exM';
phiP = [Gm;0;0;mTmp]/sqrt(mNorm);
phiM = [mTmp;0;0;-Gm]/sqrt(mNorm);
psiP = [0;Gl;lTmp;0]/sqrt(lNorm);
psiM = [0;lTmp;-Gl;0]/sqrt(lNorm);
S = expm(1i*H0*dtInt)*expm(-1i*H*dtInt);
U0 = diag([exp(-1i*Omega*dtInt/2) exp(-1i*delta*dtInt/2) exp(-1i*delta*dtInt/2) exp(1i*Omega*dtInt/2)]);
U1 = exp(-1i*mP*dtInt/2)*phiP*phiP' + exp(-1i*mM*dtInt/2)*phiM*phiM' + ...
    exp(-1i*lP*dtInt/2)*psiP*psiP' + exp(-1i*lM*dtInt/2)*psiM*psiM';
V1 = zeros(4);
V1(1,1) = D;
V1(4,4) = D';
V1(1,4) = -1i*m;
V1(4,1) = -1i*m';
V1 = V1*exp(-1i*gzz*dtInt/8);
V2 = zeros(4);
V2(2,2) = C;
V2(3,3) = C';
V2(2,3) = -1i*k;
V2(3,2) = -1i*k';
V2 = V2*exp(1i*gzz*dtInt/8);
V = V1 + V2;
L1 = (D*exM*s0+C'*exP*s1);
L2 = (D'*exM*s1+C*exP*s0);
L3 = (k*exP*sm+m'*exM*sp);
L4 = (k'*exP*sp+m*exM*sm);
K = p0*c.rightMultiply(L1')*c.leftMultiply(L1) + p1*c.rightMultiply(L2')*c.leftMultiply(L2) +...
    p0*c.rightMultiply(L3')*c.leftMultiply(L3) + p1*c.rightMultiply(L4')*c.leftMultiply(L4);
K = K - eye(4);
g(1,1) = gxx/2;
g(2,2) = gyy/2;
g(3,3) = gzz/2;
g(5,5) = 0;
Ntrials = 100;
rho0 = [1 0; 0 0];
dtInt = 0.01;
c = collisionModelSpinBath(dimS,omegaS,dimB,omegaB,TB,gamma,dtInt,g,rho0);
c.findSSwithoutSim();
c.getLpm;
rhoOld = c.rhoSSscatter{1}
[a b] = eig(K);
rhoCal = a(:,b==min(diag(b)));
rhoCal = reshape(rhoCal,2,2)/sum(rhoCal)